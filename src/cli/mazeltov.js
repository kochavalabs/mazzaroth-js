import fs from 'fs'
import program from 'commander'
import Client from '../client/node-client.js'

const clientCommand = (command, desc, opts, action) => {
  let cmd = program.command(`${command} <val>`)
  cmd.description(desc)
    .option('-h --host <s>',
      'Web address of the host node default: "http://localhost:8081"')
    .option('-k --priv_key <s>',
      'Priv key hex to sign contract with. default: "0"')

  for (const opt of opts) {
    cmd.option(opt[0], opt[1])
  }
  cmd.action(function (val, options) {
    options.host = options.host || 'http://localhost:8081'
    options.priv_key = options.priv_key || '0'
    const client = new Client(options.host, options.priv_key)
    action(val, options, client)
  })
}

const contractDeployDesc = `
Deploys a contract to the node making it available for use. Accepts a file as
the argument for <val> which should be a valid mazzaroth contract wasm file.

Examples:
  mazeltov contract-deploy './test/data/hello_world.wasm' -n 'My contract'
`
const contractDeployOptions = [
  [
    '-n --contract_name <s>',
    'Priv key hex to sign contract with. default: "contract"'
  ]
]
clientCommand('contract-deploy', contractDeployDesc, contractDeployOptions,
  (val, options, client) => {
    const name = options.contract_name || 'contract'
    fs.readFile(val, (err, data) => {
      if (err) throw err
      client.contractDeploy(data, name).then(res => {
        console.log(res.contract.contractId.toString('hex'))
      })
        .catch(error => console.log(error.response.data))
    })
  })

const transactionSubmitDesc = `
Submits a transaction to a mazzaroth node. The format of <val> is a json string
that can be formatted into a transaction protobuf:
(https://github.com/kochavalabs/mazzaroth/blob/develop/pkg/pb/transaction.proto)

Examples:
  mazeltov transaction-submit '{"contractId":"$ID", "call":"hello"}'
`
clientCommand('transaction-submit', transactionSubmitDesc, [],
  (val, options, client) => {
    client.transactionSubmit(JSON.parse(val)).then(res => {
      console.log(res)
    })
      .catch(error => console.log(error.response.data))
  })

const transactionLookupDesc = `
Looks up the current status and results of a transaction by ID. Val is simply
a transaction ID (an integer).

Examples:
  mazeltov transaction-lookup 909970530173428724
`
clientCommand('transaction-lookup', transactionLookupDesc, [],
  (val, options, client) => {
    client.transactionLookup(val).then(res => {
      console.log(res)
    })
      .catch(error => console.log(error.response.data))
  })

program.on('command:*', function (command) {
  program.help()
})

program.parse(process.argv)
